# -*- coding: utf-8 -*-

# 解题思路:
#   题目要求, 不能使用额外数组空间, 仅O(1)额外空间并原地完成数组操作
#   采用双指针(快慢指针)解法，快指针: 寻找新数组(不含有目标元素的数组)的元素, 慢指针: 指向更新新数组下标的位置
#   当快指针遇到要删除的元素时, 慢指针停止移动和赋值, 快指针继续向前

def aa(nums, val):
    f = s = 0
    while f < len(nums):
        if nums[f] != val:
            nums[s] = nums[f]
            s += 1
        f += 1
    return s


if __name__ == "__main__":
    print aa([3,2,2,3], 3)
    print aa([0,1,2,2,3,0,4,2], 2)
